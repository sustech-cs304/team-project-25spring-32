package com.example.pa.data.Daos;

import android.content.ContentValues;
import android.content.Context;
import android.database.Cursor;
import android.database.SQLException;
import android.database.sqlite.SQLiteDatabase;
import android.util.Log;

import com.example.pa.data.DatabaseHelper;

public class AlbumDao {
    public static final String TABLE_NAME = "Album";
    public static final String COLUMN_ID = "id";
    public static final String COLUMN_NAME = "name";
    public static final String COLUMN_USER_ID = "user_id";
    public static final String COLUMN_IS_AUTO_GENERATED = "is_auto_generated";
    public static final String COLUMN_IS_COLLABORATIVE = "is_collaborative";
    public static final String COLUMN_VISIBILITY = "visibility";
    public static final String COLUMN_CREATED_TIME = "created_time";

    public static final String CREATE_TABLE =
            "CREATE TABLE " + TABLE_NAME + " (" +
                    COLUMN_ID + " INTEGER PRIMARY KEY AUTOINCREMENT, " +
                    COLUMN_NAME + " TEXT NOT NULL CHECK(length(" + COLUMN_NAME + ") <= 20), " +
                    COLUMN_USER_ID + " INTEGER NOT NULL, " +
                    COLUMN_IS_AUTO_GENERATED + " INTEGER DEFAULT 0, " +
                    COLUMN_IS_COLLABORATIVE + " INTEGER DEFAULT 0, " +
                    COLUMN_VISIBILITY + " TEXT DEFAULT 'private', " +
                    COLUMN_CREATED_TIME + " TEXT DEFAULT (datetime('now')), " +
                    "FOREIGN KEY(" + COLUMN_USER_ID + ") REFERENCES " +
                    UserDao.TABLE_NAME + "(" + UserDao.COLUMN_ID + "))";

    private final SQLiteDatabase db;

    public AlbumDao(Context context) {
        this.db = DatabaseHelper.getInstance(context).getWritableDatabase();
    }

    public long addAlbum(String name, int userId, boolean isAutoGenerated,
                         boolean isCollaborative, String visibility) {
        if (name == null || name.isEmpty() || name.length() > 20) {
            Log.e("AlbumDao", "相册名称不合法");
            return -1;
        }

        ContentValues values = new ContentValues();
        values.put(COLUMN_NAME, name);
        values.put(COLUMN_USER_ID, userId);
        values.put(COLUMN_IS_AUTO_GENERATED, isAutoGenerated ? 1 : 0);
        values.put(COLUMN_IS_COLLABORATIVE, isCollaborative ? 1 : 0);
        values.put(COLUMN_VISIBILITY, visibility);

        try {
            return db.insert(TABLE_NAME, null, values);
        } catch (SQLException e) {
            Log.e("AlbumDao", "添加相册失败: " + e.getMessage());
            return -1;
        }
    }

    public boolean updateAlbumVisibility(int albumId, String visibility) {
        ContentValues values = new ContentValues();
        values.put(COLUMN_VISIBILITY, visibility);

        try {
            int affected = db.update(TABLE_NAME, values,
                    COLUMN_ID + " = ?", new String[]{String.valueOf(albumId)});
            return affected > 0;
        } catch (SQLException e) {
            Log.e("AlbumDao", "更新相册可见性失败", e);
            return false;
        }
    }

    public Cursor getAlbumsByUser(int userId) {
        return db.query(TABLE_NAME,
                null,
                COLUMN_USER_ID + " = ?",
                new String[]{String.valueOf(userId)},
                null, null, COLUMN_CREATED_TIME + " DESC");
    }

    public boolean deleteAlbum(int albumId) {
        try {
            int affected = db.delete(TABLE_NAME,
                    COLUMN_ID + " = ?",
                    new String[]{String.valueOf(albumId)});
            return affected > 0;
        } catch (SQLException e) {
            Log.e("AlbumDao", "删除相册失败", e);
            return false;
        }
    }

    public void clearTable() {
        db.beginTransaction();
        try {
            db.delete(TABLE_NAME, null, null);
            db.execSQL("DELETE FROM sqlite_sequence WHERE name='" + TABLE_NAME + "'");
            db.setTransactionSuccessful();
        } finally {
            db.endTransaction();
        }
    }

    public static class Album {
        public final int id;
        public final String name;
        public final int userId;
        public final boolean isAutoGenerated;
        public final boolean isCollaborative;
        public final String visibility;
        public final String createdTime;

        public Album(int id, String name, int userId, boolean isAutoGenerated,
                     boolean isCollaborative, String visibility, String createdTime) {
            this.id = id;
            this.name = name;
            this.userId = userId;
            this.isAutoGenerated = isAutoGenerated;
            this.isCollaborative = isCollaborative;
            this.visibility = visibility;
            this.createdTime = createdTime;
        }
    }
}